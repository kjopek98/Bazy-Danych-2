package WarstwaAplikacji;

import WarstwaBiznesowa.MenedzerBilety;
import WarstwaBiznesowa.MenedzerPolaczenia;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;

public class ListaPolaczen {
    public JPanel listaPolaczenFrame;
    private JLabel listaLabel;
    private JTable listaPolaczenTable;
    private JScrollPane scroll1;

    public ListaPolaczen() {
        DefaultTableModel model = new DefaultTableModel(new String[]{
                "ID", "Data_wylotu", "Miejsce_wylotu", "Miejsce_przylotu", "Bagaż", "Zakup"
        }, 0);
        listaPolaczenTable.setModel(model);

        scroll1.setViewportView(listaPolaczenTable);

        String[] dane = MenedzerPolaczenia.podajDane();

        TableColumn bagazColumn = listaPolaczenTable.getColumnModel().getColumn(4);
        TableColumn zakupColumn = listaPolaczenTable.getColumnModel().getColumn(5);

        JComboBox comboBox = new JComboBox();
        comboBox.addItem("MAŁY");
        comboBox.addItem("ŚREDNI");
        comboBox.addItem("DUŻY");
        bagazColumn.setCellEditor(new DefaultCellEditor(comboBox));

        Action zakup = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {

                JTable listaPolaczenTable = (JTable) actionEvent.getSource();
                int modelRow = Integer.valueOf(actionEvent.getActionCommand());
                String[] info = new String[2];
                Object nrLotu = ((DefaultTableModel) listaPolaczenTable.getModel()).getValueAt(modelRow, 0);
                Object bagaz = ((DefaultTableModel) listaPolaczenTable.getModel()).getValueAt(modelRow, 4);
                info[0] = nrLotu.toString();
                info[1] = bagaz.toString();
                MenedzerBilety.dodajBilet(info);
                ((DefaultTableModel) listaPolaczenTable.getModel()).removeRow(modelRow);
            }

        };
        //ButtonColumn buttonColumn = new ButtonColumn(listaPolaczenTable, zakup, 5);
        ButtonColumn buttonColumn = new ButtonColumn(listaPolaczenTable, zakup, 5);
        buttonColumn.setMnemonic(KeyEvent.VK_D);

        for (int i = 0; i < dane.length; i = i + 4) {
            model.addRow(new Object[]{
                    dane[i], dane[i + 1], dane[i + 2], dane[i + 3], "MAŁY", "KUP TERAZ"
            });
        }

    }

    public ListaPolaczen(String[] dane) {

        DefaultTableModel model = new DefaultTableModel(new String[]{
                "ID", "Data_wylotu", "Miejsce_wylotu", "Miejsce_przylotu", "Bagaż", "Zakup"
        }, 0);
        listaPolaczenTable.setModel(model);

        scroll1.setViewportView(listaPolaczenTable);

        String[] wyszukane = MenedzerPolaczenia.podajDane(dane);

        TableColumn bagazColumn = listaPolaczenTable.getColumnModel().getColumn(4);
        TableColumn zakupColumn = listaPolaczenTable.getColumnModel().getColumn(5);

        JComboBox comboBox = new JComboBox();
        comboBox.addItem("MAŁY");
        comboBox.addItem("ŚREDNI");
        comboBox.addItem("DUŻY");
        bagazColumn.setCellEditor(new DefaultCellEditor(comboBox));

        Action zakup = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {

                JTable listaPolaczenTable = (JTable) actionEvent.getSource();
                int modelRow = Integer.valueOf(actionEvent.getActionCommand());
                String[] info = new String[2];
                Object nrLotu = ((DefaultTableModel) listaPolaczenTable.getModel()).getValueAt(modelRow, 0);
                Object bagaz = ((DefaultTableModel) listaPolaczenTable.getModel()).getValueAt(modelRow, 4);
                info[0] = nrLotu.toString();
                info[1] = bagaz.toString();
                MenedzerBilety.dodajBilet(info);
                ((DefaultTableModel) listaPolaczenTable.getModel()).removeRow(modelRow);
            }

        };
        //ButtonColumn buttonColumn = new ButtonColumn(listaPolaczenTable, zakup, 5);
        ButtonColumn buttonColumn = new ButtonColumn(listaPolaczenTable, zakup, 5);
        buttonColumn.setMnemonic(KeyEvent.VK_D);

        for (int i = 0; i < wyszukane.length; i = i + 4) {
            model.addRow(new Object[]{
                    wyszukane[i], wyszukane[i + 1], wyszukane[i + 2], wyszukane[i + 3], "MAŁY", "KUP TERAZ"
            });
        }

    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        listaPolaczenFrame = new JPanel();
        listaPolaczenFrame.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        listaLabel = new JLabel();
        listaLabel.setText("Lista Połączeń");
        listaPolaczenFrame.add(listaLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        listaPolaczenTable = new JTable();
        listaPolaczenFrame.add(listaPolaczenTable, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        scroll1 = new JScrollPane();
        listaPolaczenFrame.add(scroll1, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return listaPolaczenFrame;
    }

}
